//-----------------------------------------------------------------------------
// File : AppPrimitive.h
// Desc : Debug Primitive.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <d3d11.h>
#include <asdxMath.h>
#include <asdxRef.h>


///////////////////////////////////////////////////////////////////////////////
// CbMesh structure
///////////////////////////////////////////////////////////////////////////////
struct CbMesh
{
    asdx::Matrix    World;      //!< ワールド行列です.
    asdx::Vector4   Color;      //!< カラーです.
};

///////////////////////////////////////////////////////////////////////////////
// ShapeVertex structure
///////////////////////////////////////////////////////////////////////////////
struct ShapeVertex
{
    asdx::Vector3   Position;
    asdx::Vector3   Normal;
};

///////////////////////////////////////////////////////////////////////////////
// BoxShape class
///////////////////////////////////////////////////////////////////////////////
class BoxShape
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    BoxShape();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~BoxShape();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      pDevice     デバイスです.
    //! @param[in]      size        サイズです.
    //! @retval true    初期化に成功.
    //! @retval false   初期化に失敗.
    //-------------------------------------------------------------------------
    bool Init(ID3D11Device* pDevice, float size);

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      描画コマンドを積みます.
    //!
    //! @param[in]      pContext    デバイスコンテキストです.
    //! @param[in]      world       ワールド行列です.
    //! @param[in]      color       カラーです.
    //-------------------------------------------------------------------------
    void Draw(
        ID3D11DeviceContext*    pContext,
        const asdx::Matrix&     world,
        const asdx::Vector4&    color);

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    asdx::RefPtr<ID3D11Buffer>  m_VB;       //!< 頂点バッファ.
    asdx::RefPtr<ID3D11Buffer>  m_CB;       //!< 定数バッファ.

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};


///////////////////////////////////////////////////////////////////////////////
// SphereShape class
///////////////////////////////////////////////////////////////////////////////
class SphereShape
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    SphereShape();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~SphereShape();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      radius      半径です.
    //! @param[in]      divide      分割数です.
    //! @retval true    初期化に成功.
    //! @retval false   初期化に失敗.
    //-------------------------------------------------------------------------
    bool Init(ID3D11Device* pDevice, float radius, int divide);

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      描画コマンドを積みます.
    //!
    //! @param[in]      pContext    デバイスコンテキストです.
    //! @param[in]      world       ワールド行列です.
    //! @param[in]      color       カラーです.
    //-------------------------------------------------------------------------
    void Draw(
        ID3D11DeviceContext*    pContext,
        const asdx::Matrix&     world,
        const asdx::Vector4&    color);

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    asdx::RefPtr<ID3D11Buffer>  m_VB;       //!< 頂点バッファ.
    asdx::RefPtr<ID3D11Buffer>  m_IB;       //!< インデックスバッファ.
    asdx::RefPtr<ID3D11Buffer>  m_CB;       //!< 定数バッファ.
    uint32_t                    m_Count;    //!< インデックス数です.

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};

///////////////////////////////////////////////////////////////////////////////
// PyramidShape class
///////////////////////////////////////////////////////////////////////////////
class PyramidShape
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    PyramidShape();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~PyramidShape();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      length      高さ.
    //! @param[in]      width       横幅.
    //-------------------------------------------------------------------------
    bool Init(ID3D11Device* pDevice, float length, float width);

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      描画コマンドを積みます.
    //!
    //! @param[in]      pContext        コンテキストです.
    //! @param[in]      world           ワールド行列です.
    //! @param[in]      color           カラーです.
    //-------------------------------------------------------------------------
    void Draw(
        ID3D11DeviceContext*    pContext,
        const asdx::Matrix&     world,
        const asdx::Vector4&    color);

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    asdx::RefPtr<ID3D11Buffer>  m_VB;   //!< 頂点バッファです.
    asdx::RefPtr<ID3D11Buffer>  m_IB;   //!< インデックスバッファです.
    asdx::RefPtr<ID3D11Buffer>  m_CB;   //!< 定数バッファです.

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};

///////////////////////////////////////////////////////////////////////////////
// BoneShape clsas
///////////////////////////////////////////////////////////////////////////////
class BoneShape
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    BoneShape();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~BoneShape();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      pDevice         デバイスです.
    //! @param[in]      length          長さです.
    //! @param[in]      width           横幅です.
    //! @retval true    初期化に成功.
    //! @retval false   初期化に失敗.
    //-------------------------------------------------------------------------
    bool Init(ID3D11Device* pDevice, float length, float width);

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      描画処理を行います.
    //!
    //! @param[in]      pContext        デバイスコンテキストです.
    //! @param[in]      world           ワールド行列です.
    //! @param[in]      color           カラーです.
    //-------------------------------------------------------------------------
    void Draw(
        ID3D11DeviceContext*    pContext,
        const asdx::Matrix&     world,
        const asdx::Vector4&    color);

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    asdx::RefPtr<ID3D11Buffer>  m_VB;   //!< 頂点バッファです.
    asdx::RefPtr<ID3D11Buffer>  m_IB;   //!< インデックスバッファです.
    asdx::RefPtr<ID3D11Buffer>  m_CB;   //!< 定数バッファです.

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};


///////////////////////////////////////////////////////////////////////////////
// DiskShape class
///////////////////////////////////////////////////////////////////////////////
class DiskShape
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    DiskShape();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~DiskShape();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      pDevice     デバイスです.
    //! @param[in]      radius      半径です.
    //! @param[in]      divide      分割数です.
    //! @retval true    初期化に成功.
    //! @retval false   初期化に失敗.
    //-------------------------------------------------------------------------
    bool Init(ID3D11Device* pDevice, float radius, int divide);

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      描画コマンドを積みます.
    //!
    //! @param[in]      pContext        デバイスコンテキストです.
    //! @param[in]      world           ワールド行列です.
    //! @param[in]      color           カラーです.
    //-------------------------------------------------------------------------
    void Draw(
        ID3D11DeviceContext*    pContext,
        const asdx::Matrix&     world,
        const asdx::Vector4&    color);

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    asdx::RefPtr<ID3D11Buffer>  m_VB;       //!< 頂点バッファです.
    asdx::RefPtr<ID3D11Buffer>  m_IB;       //!< インデックスバッファです.
    asdx::RefPtr<ID3D11Buffer>  m_CB;       //!< 定数バッファです.
    uint32_t                    m_Count;    //!< インデックス数です.

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};

///////////////////////////////////////////////////////////////////////////////
// ConeShape
///////////////////////////////////////////////////////////////////////////////
class ConeShape
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    ConeShape();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~ConeShape();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      pDevice     デバイスです.
    //! @param[in]      radius      半径です.
    //! @param[in]      height      高さです.
    //! @param[in]      divide      分割数です.
    //! @retval true    初期化に成功.
    //! @retval false   初期化に失敗.
    //-------------------------------------------------------------------------
    bool Init(ID3D11Device* pDevice, float radius, float height, int divide);

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      描画コマンドを積みます.
    //!
    //! @param[in]      pContext        デバイスコンテキストです.
    //! @param[in]      world           ワールド行列です.
    //! @param[in]      color           カラーです.
    //-------------------------------------------------------------------------
    void Draw(
        ID3D11DeviceContext*    pContext,
        const asdx::Matrix&     world,
        const asdx::Vector4&    color);

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    asdx::RefPtr<ID3D11Buffer>  m_VB;       //!< 頂点バッファです.
    asdx::RefPtr<ID3D11Buffer>  m_IB;       //!< インデックスバッファです.
    asdx::RefPtr<ID3D11Buffer>  m_CB;       //!< 定数バッファです.
    uint32_t                    m_Count;    //!< インデックス数です.

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};

///////////////////////////////////////////////////////////////////////////////
// CylinderShape class
///////////////////////////////////////////////////////////////////////////////
class CylinderShape
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    CylinderShape();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~CylinderShape();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      pDevice     デバイスです.
    //! @param[in]      radius      半径です.
    //! @param[in]      height      高さです.
    //! @param[in]      divide      分割数です.
    //! @retval true    初期化に成功.
    //! @retval false   初期化に失敗.
    //-------------------------------------------------------------------------
    bool Init(ID3D11Device* pDevice, float radius, float height, int divide);

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      描画コマンドを積みます.
    //!
    //! @param[in]      pContext        デバイスコンテキストです.
    //! @param[in]      world           ワールド行列です.
    //! @param[in]      color           カラーです.
    //-------------------------------------------------------------------------
    void Draw(
        ID3D11DeviceContext*    pContext,
        const asdx::Matrix&     world,
        const asdx::Vector4&    color);

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    asdx::RefPtr<ID3D11Buffer>  m_VB;       //!< 頂点バッファです.
    asdx::RefPtr<ID3D11Buffer>  m_IB;       //!< インデックスバッファです.
    asdx::RefPtr<ID3D11Buffer>  m_CB;       //!< 定数バッファです.
    uint32_t                    m_Count;    //!< インデックス数です.

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};


///////////////////////////////////////////////////////////////////////////////
// ArrowShape class
///////////////////////////////////////////////////////////////////////////////
class ArrowShape
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    ArrowShape();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~ArrowShape();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      pDevice     デバイスです.
    //! @param[in]      radius      半径です.
    //! @param[in]      height      高さです.
    //! @param[in]      divide      分割数です.
    //! @retval true    初期化に成功.
    //! @retval false   初期化に失敗.
    //-------------------------------------------------------------------------
    bool Init(
        ID3D11Device* pDevice,
        float cylinderRadius,
        float cylinderHeight,
        float coneRadius,
        float coneHeight,
        int divide);

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      描画コマンドを積みます.
    //!
    //! @param[in]      pContext        デバイスコンテキストです.
    //! @param[in]      world           ワールド行列です.
    //! @param[in]      color           カラーです.
    //-------------------------------------------------------------------------
    void Draw(
        ID3D11DeviceContext*    pContext,
        const asdx::Matrix&     world,
        const asdx::Vector4&    color);

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    CylinderShape       m_Cylinder;
    ConeShape           m_Cone;
    asdx::Matrix        m_OffsetCone;

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};