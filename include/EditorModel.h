//-----------------------------------------------------------------------------
// File : EditorModel.h
// Desc : Model For Mateiral Editor.
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <string>
#include <asdxMath.h>


///////////////////////////////////////////////////////////////////////////////
// SHADER_TYPE enum
///////////////////////////////////////////////////////////////////////////////
enum SHADER_TYPE
{
    // Static
    SHADER_0,  // Position, Color
    SHADER_1,  // Position, TangentSpace, Color, TexCoord0
    SHADER_2,  // Position, TangentSpace, Color, TexCoord0, TexCoord1,
    SHADER_3,  // Position, TangentSpace, Color, TexCoord0, TexCoord1, TexCoord2,
    SHADER_4,  // Position, TangentSpace, Color, TexCoord0, TexCoord1, TexCoord2, TexCoord3,
};

///////////////////////////////////////////////////////////////////////////////
// BoundingBox structure
///////////////////////////////////////////////////////////////////////////////
struct BoundingBox
{
    asdx::Vector3   mini;
    asdx::Vector3   maxi;
};

///////////////////////////////////////////////////////////////////////////////
// EditorModel class
///////////////////////////////////////////////////////////////////////////////
class EditorModel
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variable.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    EditorModel();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~EditorModel();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      path        ファイルパスです.
    //! @retval true    初期化に成功.
    //! @retval false   初期化に失敗.
    //-------------------------------------------------------------------------
    bool Init(const char* model);

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      メッシュ数を取得します.
    //!
    //! @return     メッシュ数を返却します.
    //-------------------------------------------------------------------------
    uint32_t GetMeshCount() const;

    //-------------------------------------------------------------------------
    //! @brief      バウンディングボックスを取得します.
    //!
    //! @return     バウンディングボックスを返却します.
    //-------------------------------------------------------------------------
    const BoundingBox& GetBox() const;

    //-------------------------------------------------------------------------
    //! @brief      シェーダタイプを取得します.
    //!
    //! @return     シェーダタイプを返却します.
    //-------------------------------------------------------------------------
    SHADER_TYPE GetShaderType() const;

    //-------------------------------------------------------------------------
    //! @brief      ファイルパスを取得します.
    //!
    //! @return     ファイルパスを返却します.
    //-------------------------------------------------------------------------
    const std::string& GetPath() const;

    //-------------------------------------------------------------------------
    //! @brief      ワールド行列を取得します.
    //!
    //! @return     ワールド行列を返却します.
    //-------------------------------------------------------------------------
    const asdx::Matrix& GetWorld() const;

    //-------------------------------------------------------------------------
    //! @brief      スケールを設定します.
    //-------------------------------------------------------------------------
    void SetScale(const asdx::Vector3& scale);

    //-------------------------------------------------------------------------
    //! @brief      回転角を設定します(度単位).
    //-------------------------------------------------------------------------
    void SetRotate(const asdx::Vector3& rotate);

    //-------------------------------------------------------------------------
    //! @brief      平行移動量を設定します.
    //-------------------------------------------------------------------------
    void SetTranslation(const asdx::Vector3& translation);

    //-------------------------------------------------------------------------
    //! @brief      スケールを取得します.
    //-------------------------------------------------------------------------
    const asdx::Vector3& GetScale() const;

    //-------------------------------------------------------------------------
    //! @brief      回転角を取得します(度単位).
    //-------------------------------------------------------------------------
    const asdx::Vector3& GetRotate() const;

    //-------------------------------------------------------------------------
    //! @brief      平行移動量を取得します.
    //-------------------------------------------------------------------------
    const asdx::Vector3& GetTranslation() const;

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    std::string     m_Path;             //!< ファイルパス.
    asdx::Vector3   m_Scale;            //!< スケール.
    asdx::Vector3   m_Rotation;         //!< 回転角(度単位).
    asdx::Vector3   m_Translation;      //!< 平行移動量.
    asdx::Matrix    m_World;            //!< ワールド行列.
    SHADER_TYPE     m_ShaderType;       //!< シェーダタイプ.

    //=========================================================================
    // private methods.
    //=========================================================================
    void UpdateWorld();
};
