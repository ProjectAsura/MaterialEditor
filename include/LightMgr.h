//-----------------------------------------------------------------------------
// File : LightMgr.h
// Desc : Light Manager.
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <string>
#include <vector>
#include <d3d11.h>
#include <tinyxml2.h>
#include <asdxMath.h>
#include <asdxRef.h>
#include <asdxSkyBox.h>
#include <asdxConstantBuffer.h>


///////////////////////////////////////////////////////////////////////////////
// EditorLight structure
///////////////////////////////////////////////////////////////////////////////
class EditorLight
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    friend class LightMgr;

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    std::string         Tag;
    asdx::Vector3       SunLightDir;
    float               SunLightIntensity;
    std::string         IBLPath;
    float               IBLIntensity;
    float               IBLRotation;

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    EditorLight();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~EditorLight();

    //-------------------------------------------------------------------------
    //! @brief      テクスチャを破棄します.
    //-------------------------------------------------------------------------
    void Reset();

    //-------------------------------------------------------------------------
    //! @brief      シリアライズします.
    //-------------------------------------------------------------------------
    tinyxml2::XMLElement* Serialize(tinyxml2::XMLDocument* doc);

    //-------------------------------------------------------------------------
    //! @brief      デシリアライズします.
    //-------------------------------------------------------------------------
    void Deserialize(tinyxml2::XMLElement* element);

    //-------------------------------------------------------------------------
    //! @brief      背景用キューブマップを取得します.
    //-------------------------------------------------------------------------
    ID3D11ShaderResourceView* GetOriginal() const;

    //-------------------------------------------------------------------------
    //! @brief      DiffuseLDキューブマップを取得します.
    //-------------------------------------------------------------------------
    ID3D11ShaderResourceView* GetDiffuseLD() const;

    //-------------------------------------------------------------------------
    //! @brief      SpecularLDキューブマップを取得します.
    //-------------------------------------------------------------------------
    ID3D11ShaderResourceView* GetSpecularLD() const;

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    asdx::RefPtr<ID3D11ShaderResourceView>  m_Original_SRV;
    asdx::RefPtr<ID3D11ShaderResourceView>  m_DiffuseLD_SRV;
    asdx::RefPtr<ID3D11UnorderedAccessView> m_DiffuseLD_UAV;
    asdx::RefPtr<ID3D11ShaderResourceView>  m_SpecularLD_SRV;
    asdx::RefPtr<ID3D11UnorderedAccessView> m_SpecularLD_UAV;

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};


///////////////////////////////////////////////////////////////////////////////
// LightMgr
///////////////////////////////////////////////////////////////////////////////
class LightMgr
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      シングルトンインスタンスを取得します.
    //-------------------------------------------------------------------------
    static LightMgr& Instance();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //-------------------------------------------------------------------------
    bool Init(const char* path);

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      更新処理を行います.
    //-------------------------------------------------------------------------
    void Update(ID3D11DeviceContext* pContext);

    //-------------------------------------------------------------------------
    //! @brief      描画処理を行います.
    //-------------------------------------------------------------------------
    void Draw(ID3D11DeviceContext* pContext);

    //-------------------------------------------------------------------------
    //! @brief      環境BRDFを取得します.
    //-------------------------------------------------------------------------
    ID3D11ShaderResourceView* GetEnvBRDF() const;

    //-------------------------------------------------------------------------
    //! @brief      
    //-------------------------------------------------------------------------
    ID3D11ShaderResourceView* GetOriginal() const;

    //-------------------------------------------------------------------------
    //! @brief      DiffuseLDキューブマップを取得します.
    //-------------------------------------------------------------------------
    ID3D11ShaderResourceView* GetDiffuseLD() const;

    //-------------------------------------------------------------------------
    //! @brief      SpecularLDキューブマップを取得します.
    //-------------------------------------------------------------------------
    ID3D11ShaderResourceView* GetSpecularLD() const;

    //-------------------------------------------------------------------------
    //! @brief      定数バッファを取得します.
    //-------------------------------------------------------------------------
    ID3D11Buffer* GetBuffer() const;

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    static LightMgr                         s_Instance;
    std::vector<EditorLight>                m_Light;
    size_t                                  m_CurrentIndex;
    asdx::SkyBox                            m_SkyBox;
    asdx::RefPtr<ID3D11ComputeShader>       m_PrefilterDiffuseCS;
    asdx::RefPtr<ID3D11ComputeShader>       m_PrefilterSpcularCS;
    asdx::RefPtr<ID3D11ShaderResourceView>  m_EnvBRDF;
    asdx::ConstantBuffer                    m_LightCB;

    //=========================================================================
    // private methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      DiffuseLDキューブマップを生成します.
    //-------------------------------------------------------------------------
    void ConvolutionDiffuse (ID3D11DeviceContext* pContext, EditorLight& light);

    //-------------------------------------------------------------------------
    //! @brief      SpecularLDキューブマップを生成します.
    //-------------------------------------------------------------------------
    void ConvolutionSpecular(ID3D11DeviceContext* pContext, EditorLight& light);
};
