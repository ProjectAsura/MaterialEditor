//-----------------------------------------------------------------------------
// File : LightMgr.h
// Desc : Light Manager.
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <string>
#include <vector>
#include <d3d11.h>
#include <tinyxml2.h>
#include <asdxMath.h>
#include <asdxRef.h>
#include <asdxSkyBox.h>
#include <asdxConstantBuffer.h>


///////////////////////////////////////////////////////////////////////////////
// EditorLight structure
///////////////////////////////////////////////////////////////////////////////
class EditorLight
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    friend class LightMgr;

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    std::string         Tag;
    asdx::Vector2       SunLightAngle;
    float               SunLightIntensity;
    std::string         BackgroundPath;
    std::string         IBLPath;
    float               IBLIntensity;

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    EditorLight();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~EditorLight();

    //-------------------------------------------------------------------------
    //! @brief      ファイルをロードします.
    //-------------------------------------------------------------------------
    bool Load(const char* path, const std::string& dir);

    //-------------------------------------------------------------------------
    //! @brief      ファイルをセーブします.
    //-------------------------------------------------------------------------
    bool Save(const char* path);

    //-------------------------------------------------------------------------
    //! @brief      テクスチャを破棄します.
    //-------------------------------------------------------------------------
    void Reset();

    //-------------------------------------------------------------------------
    //! @brief      背景用キューブマップを取得します.
    //-------------------------------------------------------------------------
    ID3D11ShaderResourceView* GetBackground() const;

    //-------------------------------------------------------------------------
    //! @brief      IBLテクスチャを取得します.
    //-------------------------------------------------------------------------
    ID3D11ShaderResourceView* GetIBL() const;

    //-------------------------------------------------------------------------
    //! @brief      DiffuseLDキューブマップを取得します.
    //-------------------------------------------------------------------------
    ID3D11ShaderResourceView* GetDiffuseLD() const;

    //-------------------------------------------------------------------------
    //! @brief      SpecularLDキューブマップを取得します.
    //-------------------------------------------------------------------------
    ID3D11ShaderResourceView* GetSpecularLD() const;

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    asdx::RefPtr<ID3D11ShaderResourceView>  m_Background;
    asdx::RefPtr<ID3D11ShaderResourceView>  m_IBL;
    asdx::RefPtr<ID3D11ShaderResourceView>  m_DiffuseLD;
    asdx::RefPtr<ID3D11ShaderResourceView>  m_SpecularLD;

    //=========================================================================
    // private methods.
    //=========================================================================
    bool LoadTexture(const std::string& dir);
};


///////////////////////////////////////////////////////////////////////////////
// LightMgr
///////////////////////////////////////////////////////////////////////////////
class LightMgr
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      シングルトンインスタンスを取得します.
    //-------------------------------------------------------------------------
    static LightMgr& Instance();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //-------------------------------------------------------------------------
    bool Init();

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      更新処理を行います.
    //-------------------------------------------------------------------------
    void Edit();

    //-------------------------------------------------------------------------
    //! @brief      背景描画処理を行います.
    //-------------------------------------------------------------------------
    void Draw(
        ID3D11DeviceContext*    pContext,
        const asdx::Vector3&    cameraPos,
        const asdx::Matrix&     view,
        const asdx::Matrix&     proj,
        float                   farClip);

    //-------------------------------------------------------------------------
    //! @brief      環境BRDFを取得します.
    //-------------------------------------------------------------------------
    ID3D11ShaderResourceView* GetEnvBRDF() const;

    //-------------------------------------------------------------------------
    //! @brief      ライトを取得します.
    //-------------------------------------------------------------------------
    const EditorLight* GetLight() const;

    //-------------------------------------------------------------------------
    //! @brief      マウス操作を行います.
    //-------------------------------------------------------------------------
    void OnMouse(float x, float y, float gain, bool down);

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    static LightMgr                         s_Instance;
    std::vector<EditorLight>                m_Light;
    size_t                                  m_CurrentIndex;
    asdx::SkyBox                            m_SkyBox;
    asdx::RefPtr<ID3D11ShaderResourceView>  m_EnvBRDF;
    bool                                    m_Drag;
    asdx::Vector2                           m_PrevCursor;
    asdx::Vector2                           m_CurrCursor;

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};
